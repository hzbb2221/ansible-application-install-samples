---
- name: 系统信息检查脚本
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: 显示系统基本信息
      block:
        - name: 获取运行时间
          ansible.builtin.shell: |
            awk '{printf "%d天%d小时%d分钟", $1/86400, ($1%86400)/3600, ($1%3600)/60}' /proc/uptime
          register: uptime
          changed_when: false

        - name: 输出系统信息
          ansible.builtin.debug:
            msg: |
              === 系统基本信息 ===
              主机名      : {{ ansible_hostname }}
              操作系统    : {{ ansible_distribution }} {{ ansible_distribution_version }}
              内核版本    : {{ ansible_kernel }}
              运行时间    : {{ uptime.stdout }}
              SELinux状态: {{ ansible_selinux.status|default('未启用') | upper }}
      rescue:
        - name: 系统信息获取失败
          ansible.builtin.debug:
            msg: "系统基础信息获取失败，请检查/proc文件系统"

    - name: 获取CPU信息
      block:
        - name: 提取CPU详情
          ansible.builtin.shell: |
            grep -m1 'model name' /proc/cpuinfo | cut -d: -f2 | sed 's/^ *//;s/$//'
          register: cpu_model
          changed_when: false

        - name: 显示CPU信息
          ansible.builtin.debug:
            msg: |
              === CPU信息 ===
              物理核心数: {{ ansible_processor_cores }}
              逻辑核心数: {{ ansible_processor_vcpus }}
              CPU型号  : {{ cpu_model.stdout | default('未知型号') }}
      rescue:
        - name: CPU信息错误处理
          ansible.builtin.debug:
            msg: "CPU信息获取失败，请检查/proc/cpuinfo"

    - name: 内存使用分析
      block:
        - name: 计算内存使用率
          ansible.builtin.shell: |
            free | awk '/Mem/{printf "%.2f", $3/$2 * 100}'
          register: mem_usage
          changed_when: false

        - name: 显示内存信息
          ansible.builtin.debug:
            msg: |
              === 内存信息 ===
              总内存    : {{ (ansible_memtotal_mb / 1024) | round(2) }} GB
              可用内存  : {{ (ansible_memfree_mb / 1024) | round(2) }} GB 
              使用率    : {{ mem_usage.stdout }}%
      rescue:
        - name: 内存信息异常
          ansible.builtin.debug:
            msg: "内存信息获取异常"

    - name: 磁盘空间检查
      block:
        - name: 获取磁盘信息
          ansible.builtin.command: df -hTP --exclude-type=tmpfs
          register: disk_info
          changed_when: false

        - name: 显示磁盘使用情况
          ansible.builtin.debug:
            msg: |
              === 磁盘信息 ===
              {{ disk_info.stdout_lines | join('\n              ') }}
      rescue:
        - name: 磁盘检查失败
          ansible.builtin.debug:
            msg: "磁盘信息获取失败"

    - name: 网络信息检测
      block:
        - name: 尝试多个公网IP接口
          ansible.builtin.uri:
            url: "{{ item }}"
            return_content: yes
            timeout: 3
            status_code: 200
          register: public_ip
          ignore_errors: yes
          loop:
            - "https://api.ipify.org"
            - "https://ifconfig.me/ip"
            - "https://ipinfo.io/ip"

        - name: 设置最终公网IP
          ansible.builtin.set_fact:
            final_public_ip: "{{ (public_ip.results | selectattr('content') | first).content | default('N/A') }}"

        - name: 显示网络信息
          ansible.builtin.debug:
            msg: |
              === 网络信息 ===
              私有IP    : {{ ansible_default_ipv4.address }}
              网关地址  : {{ ansible_default_ipv4.gateway }}
              MAC地址   : {{ ansible_default_ipv4.macaddress }}
              公网IP    : {{ final_public_ip }}
      rescue:
        - name: 网络信息异常
          ansible.builtin.debug:
            msg: "网络信息获取失败"

    - name: 进程资源监控
      block:
        - name: 获取进程TOP5
          ansible.builtin.shell: |
            echo "CPU使用TOP5:" && ps -eo pid,user,%cpu,command --sort=-%cpu | head -6
            echo -e "\n内存使用TOP5:" && ps -eo pid,user,%mem,command --sort=-%mem | head -6
          register: process_top
          changed_when: false

        - name: 显示进程信息
          ansible.builtin.debug:
            msg: |
              === 进程资源TOP5 ===
              {{ process_top.stdout_lines | join('\n              ') }}
      rescue:
        - name: 进程监控异常
          ansible.builtin.debug:
            msg: "进程信息获取失败"